// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

model Product {
  id            String   @id @default(uuid()) @db.Char(36)
  name          String   @unique @db.VarChar(100)
  price         Decimal  @db.Decimal(12, 2) // 12 é o máximo de caracteres, e 2 indica a quantidade de caracteres após a vírgula
  stockQuantity Int      @db.Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  Order Order[] @relation("OrderProduct")
}

model User {
  id         String   @id @default(uuid()) @db.Char(36)
  name       String   @db.VarChar(100)
  email      String   @unique @db.VarChar(100)
  userTypeId String   @db.Char(36)
  userType   UserType @relation(fields: [userTypeId], references: [id])
  password   String   @db.Char(60)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  Order Order[]
}

model UserType {
  id    String @id @default(uuid()) @db.Char(36)
  label String @unique @db.Char(6)
  user  User[]
}

model Order {
  id         String    @id @default(uuid()) @db.Char(36)
  userId     String    @db.Char(36)
  user       User      @relation(fields: [userId], references: [id])
  products   Product[] @relation("OrderProduct")
  totalValue Decimal   @db.Decimal(12, 2)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}
